{"version":3,"file":"748.dec0c702bf75e1e17591.js","mappings":"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","sources":["webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/components/firebase.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/components/AuthContext.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/components/ChangeUsername.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/Chat.css?24e7","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/components/message.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/components/LoginForm.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/Plugin.js","webpack://e58f99bf-e6ab-459a-a3ef-c08879907507/./src/Chat.css"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {getFirestore} from 'firebase/firestore';\nimport { getAuth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDqW8Mcav0opCXNvQOptRL8zhV19pwdazw\",\n  authDomain: \"quizdatabase-6eda3.firebaseapp.com\",\n  projectId: \"quizdatabase-6eda3\",\n  storageBucket: \"quizdatabase-6eda3.firebasestorage.app\",\n  messagingSenderId: \"741614543682\",\n  appId: \"1:741614543682:web:4cbb172200a8fccd3c5edb\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const firestore = getFirestore(app);\nexport const auth = getAuth(app);","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\nconst AuthContext = createContext({ user: null, loading: true });\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\n      setUser(firebaseUser);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}","import React, { useState, useEffect } from \"react\";\nimport { firestore } from \"./firebase\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { useAuth } from \"./AuthContext\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Paper,\n  Box\n} from \"@mui/material\";\n\nexport default function ChangeUsername() {\n  const { user } = useAuth();\n  const [username, setUsername] = useState(\"\");\n  const [storedUsername, setStoredUsername] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      const userDocRef = doc(firestore, \"users\", user.uid);\n      getDoc(userDocRef).then((docSnap) => {\n        if (docSnap.exists() && docSnap.data().username) {\n          setStoredUsername(docSnap.data().username);\n        }\n      });\n    }\n  }, [user]);\n\n  const handleSave = async () => {\n    if (!user) return;\n    const userDocRef = doc(firestore, \"users\", user.uid);\n    try {\n      await setDoc(userDocRef, { username }, { merge: true });\n      setStoredUsername(username);\n    } catch (error) {\n      console.error(\"Error updating username:\", error);\n    }\n  };\n\n  return (\n      <Paper\n        elevation={6}\n        sx={{\n          px: 2,\n          py: 1,\n          mb: 2,\n          borderRadius: \"12px\",\n          background: \"linear-gradient(135deg, #e5c185 0%, #deae9f 100%)\",\n          color: \"#fff\",\n          maxWidth: \"350px\",\n          maxHeight: \"350px\",\n          width: \"auto\",        \n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 1,\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n        <Typography\n          variant=\"body1\"\n          sx={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}\n        >\n          Change Display Name:\n        </Typography>\n\n        <TextField\n          variant=\"outlined\"\n          placeholder=\"New username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          sx={{\n            backgroundColor: \"#ffffff\",\n            borderRadius: \"4px\",\n            width: \"140px\",       // Adjust as needed\n            \"& .MuiOutlinedInput-root\": {\n              fontSize: \"0.9rem\", // Slightly smaller font\n            },\n          }}\n        />\n\n        <Button\n          onClick={handleSave}\n          variant=\"contained\"\n          sx={{\n            backgroundColor: \"#0e7467\",\n            \"&:hover\": { backgroundColor: \"#1ba494\" },\n            color: \"#fff\",\n            fontWeight: 600,\n            borderRadius: \"50px\",\n            boxShadow: \"0px 3px 6px rgba(0,0,0,0.2)\",\n            textTransform: \"none\",\n            fontSize: \"0.9rem\",\n            py: 0.6,\n            px: 2,\n          }}\n        >\n          Save\n        </Button>\n\n        {/* Show the current username inline */}\n        {storedUsername && (\n          <Typography\n            variant=\"body2\"\n            sx={{\n              fontWeight: 500,\n              backgroundColor: \"rgba(255, 255, 255, 0.15)\",\n              borderRadius: \"8px\",\n              px: 1,\n              py: 0.5,\n            }}\n          >\n            Current username: <strong>{storedUsername}</strong>\n          </Typography>\n        )}\n      </Box>\n    </Paper>\n  );\n}","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./Chat.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./Chat.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LeaderboardIcon from \"@mui/icons-material/Leaderboard\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\nimport NotificationsActiveIcon from \"@mui/icons-material/NotificationsActive\";\nimport Switch from \"@mui/material/Switch\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  addDoc,\n  onSnapshot,\n  setDoc,\n  updateDoc,\n  increment\n} from \"firebase/firestore\";\nimport { firestore } from \"./firebase\";\nimport { useAuth } from \"./AuthContext\";\nimport ChangeUsername from \"./ChangeUsername\";\nimport \"../Chat.css\";\n\nexport default function Messages() {\n  // Chat and UI state\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLeaderboardVisible, setIsLeaderboardVisible] = useState(false);\n  const [isChangeUsernameVisible, setIsChangeUsernameVisible] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const messageEndRef = useRef(null);\n  const { user } = useAuth();\n\n  // User info\n  const [displayName, setDisplayName] = useState(\"\");\n  // Stats state\n  const [totalCoins, setTotalCoins] = useState(0);\n  const [groupTotalTime, setGroupTotalTime] = useState(0);\n  const [individualStats, setIndividualStats] = useState([]);\n  const filteredStats = individualStats.filter(u => u.uid !== \"default\");\n  // Group‐wide toggles\n  const [groupSettings, setGroupSettings] = useState({\n    enableGroupStats: true,\n    enableLeaderboard: true,\n    enableSharedCoins: false,\n    showTrophies: true\n  });\n\n  const trophyItems = [\n    { id: \"goldDuck\", name: \"Golden Duck Trophy\", emoji: \"🦆✨\" },\n    { id: \"motivator\", name: \"Motivator Badge\", emoji: \"🚀\" },\n    { id: \"zenMaster\", name: \"Zen Master\", emoji: \"🧘‍♂️🌸\" },\n    { id: \"taskWizard\", name: \"Task Wizard\", emoji: \"🧙‍♂️📘\" }\n  ];\n\n  // 1️⃣ Listen for group settings changes\n  useEffect(() => {\n    const unsub = onSnapshot(doc(firestore, \"groups\", \"globalChat\"), snap => {\n      if (snap.exists()) {\n        const data = snap.data();\n        setGroupSettings({\n          enableGroupStats: !!data.enableGroupStats,\n          enableLeaderboard: !!data.enableLeaderboard,\n          enableSharedCoins: !!data.enableSharedCoins,\n          showTrophies: !!data.showTrophies\n        });\n      }\n    });\n    return unsub;\n  }, []);\n\n  // 2️⃣ Listen for user displayName\n  useEffect(() => {\n    if (!user) return;\n    const unsub = onSnapshot(doc(firestore, \"users\", user.uid), snap => {\n      if (snap.exists() && snap.data().username) {\n        setDisplayName(snap.data().username);\n      } else {\n        setDisplayName(user.uid);\n      }\n    });\n    return unsub;\n  }, [user]);\n\n  // 3️⃣ Listen for chat messages\n  useEffect(() => {\n    const unsub = onSnapshot(collection(firestore, \"globalChat\"), snapshot => {\n      const all = snapshot.docs\n        .map(d => d.data())\n        .sort((a, b) => a.timestamp?.toDate() - b.timestamp?.toDate());\n      setMessages(all);\n    });\n    return unsub;\n  }, []);\n\n  // Auto‐scroll on new messages\n  useEffect(() => {\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Fetch coins + group total time when leaderboard opens\n  const handleReceive = async () => {\n    try {\n      // Total coins\n      const coinsSnap = await getDoc(doc(firestore, \"coins\", \"default\"));\n      setTotalCoins(coinsSnap.exists() ? coinsSnap.data().coins || 0 : 0);\n\n      // Group total time studied\n      const groupSnap = await getDoc(doc(firestore, \"statistics\", \"default\"));\n      setGroupTotalTime(\n        groupSnap.exists() ? groupSnap.data().totalTimeStudied || 0 : 0\n      );\n    } catch (e) {\n      console.error(\"Error fetching group stats:\", e);\n    }\n  };\n\n  // Send a “like”\n  const sendLike = async targetUid => {\n    try {\n      await updateDoc(doc(firestore, \"statistics\", targetUid), {\n        likes: increment(1)\n      });\n    } catch (e) {\n      console.error(\"Error sending like:\", e);\n    }\n  };\n\n  // Send a “nudge”\n  const sendNudge = async targetUid => {\n    try {\n      await updateDoc(doc(firestore, \"statistics\", targetUid), {\n        nudges: increment(1)\n      });\n    } catch (e) {\n      console.error(\"Error sending nudge:\", e);\n    }\n  };\n\n  // helper functions to format time in minutes for sorting\n  function formatTime(minutes) {\n    const totalSeconds = Math.floor(minutes * 60);\n    const hrs = Math.floor(totalSeconds / 3600);\n    const mins = Math.floor((totalSeconds % 3600) / 60);\n    const secs = totalSeconds % 60;\n    return `${hrs.toString().padStart(2, \"0\")}:${mins\n      .toString()\n      .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  }\n  function parseTimeStringToMinutes(timeStr) {\n    const [hrs, mins, secs] = timeStr.split(\":\").map(Number);\n    return hrs * 60 + mins + secs / 60;\n  }\n\n  // Listen for per‐user stats when leaderboard open\n  useEffect(() => {\n    if (!isLeaderboardVisible) return;\n  \n    handleReceive();\n  \n    const unsub = onSnapshot(collection(firestore, \"statistics\"), async snap => {\n      let statsArr = snap.docs.map(d => ({\n        uid: d.id,\n        time: d.data().totalTimeStudied ? parseTimeStringToMinutes(d.data().totalTimeStudied) : 0,\n        likes: d.data().likes || 0,\n        nudges: d.data().nudges || 0\n      }));\n  \n      // Enrich each entry with username + trophies\n      statsArr = await Promise.all(\n        statsArr.map(async entry => {\n          const [userSnap, trophySnap] = await Promise.all([\n            getDoc(doc(firestore, \"users\", entry.uid)),\n            getDoc(doc(firestore, \"trophies\", entry.uid))\n          ]);\n  \n          const username =\n            userSnap.exists() && userSnap.data().username\n              ? userSnap.data().username\n              : entry.uid;\n  \n          const trophyList = trophySnap.exists() ? trophySnap.data().items || [] : [];\n          const emojiList = trophyList\n            .map(id => {\n              const item = trophyItems.find(i => i.id === id);\n              return item?.emoji;\n            })\n            .filter(Boolean);\n  \n          return {\n            ...entry,\n            username,\n            trophies: emojiList\n          };\n        })\n      );\n  \n      // ✅ Sort after enrichment\n      statsArr.sort((a, b) => b.time - a.time);\n  \n      setIndividualStats(statsArr);\n    });\n  \n    return unsub;\n  }, [isLeaderboardVisible]);\n\n  // Send a new chat message\n  const handleSend = async () => {\n    if (!input.trim() || !user) return;\n    const messageData = {\n      sender: user.uid,\n      username: displayName,\n      messageID: Date.now().toString(),\n      message: input,\n      timestamp: new Date()\n    };\n    try {\n      await addDoc(collection(firestore, \"globalChat\"), messageData);\n      setInput(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n    }\n  };\n\n  // Update any one of the three group settings\n  const updateGroupSetting = async (key, value) => {\n    try {\n      await setDoc(\n        doc(firestore, \"groups\", \"globalChat\"),\n        { [key]: value },\n        { merge: true }\n      );\n    } catch (err) {\n      console.error(\"Error updating group setting:\", err);\n    }\n  };\n\n  const handleKeyDown = e => e.key === \"Enter\" && handleSend();\n\n  // --- Leaderboard View ---\n  if (isLeaderboardVisible) {\n    return (\n      <div\n        className=\"leaderboard-page\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: 20,\n          background: \"linear-gradient(135deg, #1ba494, #0e7467)\",\n          borderRadius: 16,\n          color: \"white\"\n        }}\n      >\n        <h2 style={{ fontSize: \"2rem\", marginBottom: 10 }}>\n          🏆 Overall Group Statistics!\n        </h2>\n        <div\n          style={{\n            width: \"100%\",\n            maxWidth: 400,\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 10,\n            marginBottom: 30\n          }}\n        >\n          {groupSettings.enableGroupStats && (\n            <div\n              style={{\n                background: \"rgba(255,255,255,0.15)\",\n                borderRadius: 12,\n                padding: 12\n              }}\n            >\n              ⏱️ <strong>Total Time Studied:</strong> {groupTotalTime}\n            </div>\n          )}\n          {groupSettings.enableSharedCoins && (\n            <div\n              style={{\n                background: \"rgba(255,255,255,0.15)\",\n                borderRadius: 12,\n                padding: 12\n              }}\n            >\n              💰 <strong>Total Coins:</strong> {totalCoins}\n            </div>\n          )}\n          {groupSettings.enableLeaderboard && (\n            <>\n               <h2 style={{ fontSize: \"2rem\", marginBottom: 10 }}>\n                🥇 Leaderboard\n              </h2>\n              {filteredStats.map((u, idx) => (\n              <div\n                key={u.uid}\n                style={{\n                  background: \"rgba(255,255,255,0.1)\",\n                  borderRadius: 8,\n                  padding: 8,\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div>\n                <strong>{idx + 1}. {u.username}</strong>\n                  <span style={{ marginLeft: 8 }}>{formatTime(u.time)}</span>\n                  {groupSettings.showTrophies && u.trophies?.length > 0 && (\n                    <div style={{ marginTop: 4, fontSize: \"1.2rem\" }}>\n                      {u.trophies.join(\" \")}\n                    </div>\n                  )}\n                </div>\n                <div style={{ display: \"flex\", gap: 6, alignItems: \"center\" }}>\n                  <IconButton\n                    size=\"small\"\n                    disabled={u.uid === user?.uid}\n                    onClick={() => sendLike(u.uid)}\n                    sx={{ color: \"white\" }}\n                  >\n                    <ThumbUpIcon fontSize=\"small\" />\n                  </IconButton>\n                  <span>{u.likes}</span>\n                  <IconButton\n                    size=\"small\"\n                    disabled={u.uid === user?.uid}\n                    onClick={() => sendNudge(u.uid)}\n                    sx={{ color: \"white\" }}\n                  >\n                    <NotificationsActiveIcon fontSize=\"small\" />\n                  </IconButton>\n                  <span>{u.nudges}</span>\n                </div>\n              </div>\n            ))}\n            </>\n          )}\n        </div>\n        <Button\n          onClick={() => setIsLeaderboardVisible(false)}\n          sx={{\n            backgroundColor: \"#FF9800\",\n            color: \"#fff\",\n            borderRadius: 50,\n            px: 4,\n            py: 1.5,\n            \"&:hover\": { backgroundColor: \"#e68900\" }\n          }}\n        >\n          Back 🔙\n        </Button>\n      </div>\n    );\n  }\n\n  // --- Change Username View ---\n  if (isChangeUsernameVisible) {\n    return (\n      <div\n        className=\"change-username-page\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          background: \"linear-gradient(135deg, #e5c185, #deae9f)\",\n          borderRadius: 10,\n          padding: 15,\n          color: \"white\"\n        }}\n      >\n        <ChangeUsername />\n        <Button\n          onClick={() => setIsChangeUsernameVisible(false)}\n          sx={{\n            mt: 2,\n            backgroundColor: \"#0e7467\",\n            color: \"#fff\",\n            borderRadius: 50,\n            px: 4,\n            py: 1.5,\n            \"&:hover\": { backgroundColor: \"#1ba494\" }\n          }}\n        >\n          Back 🔙\n        </Button>\n      </div>\n    );\n  }\n\n  // --- Settings View ---\n  if (isSettingsVisible) {\n    return (\n      <div\n        className=\"settings-page\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: 20,\n          background: \"linear-gradient(135deg, #1ba494, #0e7467)\",\n          borderRadius: 16,\n          color: \"white\",\n          minHeight: \"20vh\",\n          boxSizing: \"border-box\"\n        }}\n      >\n        <h2 style={{ fontSize: \"2rem\", marginBottom: 20 }}>🔧 Group Settings</h2>\n\n        <Card\n          sx={{\n            width: \"100%\",\n            maxWidth: 400,\n            background: \"rgba(255,255,255,0.15)\",\n            borderRadius: 12,\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.15)\"\n          }}\n        >\n          <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          <FormControlLabel\n              control={\n                <Switch\n                  checked={groupSettings.showTrophies}\n                  onChange={e =>\n                    updateGroupSetting(\"showTrophies\", e.target.checked)\n                  }\n                  sx={{ \"& .MuiSwitch-thumb\": { backgroundColor: \"#fff\" } }}\n                />\n              }\n              label=\"Show Trophies in Leaderboard\"\n              sx={{ color: \"white\", fontSize: \"1rem\" }}\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={groupSettings.enableGroupStats}\n                  onChange={e =>\n                    updateGroupSetting(\"enableGroupStats\", e.target.checked)\n                  }\n                  sx={{ \"& .MuiSwitch-thumb\": { backgroundColor: \"#fff\" } }}\n                />\n              }\n              label=\"Enable Group Stats\"\n              sx={{ color: \"white\", fontSize: \"1rem\" }}\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={groupSettings.enableLeaderboard}\n                  onChange={e =>\n                    updateGroupSetting(\"enableLeaderboard\", e.target.checked)\n                  }\n                  sx={{ \"& .MuiSwitch-thumb\": { backgroundColor: \"#fff\" } }}\n                />\n              }\n              label=\"Enable Leaderboard\"\n              sx={{ color: \"white\", fontSize: \"1rem\" }}\n            />\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={groupSettings.enableSharedCoins}\n                  onChange={e =>\n                    updateGroupSetting(\"enableSharedCoins\", e.target.checked)\n                  }\n                  sx={{ \"& .MuiSwitch-thumb\": { backgroundColor: \"#fff\" } }}\n                />\n              }\n              label=\"Enable Shared Coins\"\n              sx={{ color: \"white\", fontSize: \"1rem\" }}\n            />\n          </CardContent>\n        </Card>\n\n        <Button\n          onClick={() => setIsSettingsVisible(false)}\n          sx={{\n            mt: 4,\n            backgroundColor: \"#FF9800\",\n            color: \"#fff\",\n            borderRadius: 50,\n            px: 4,\n            py: 1.5,\n            \"&:hover\": { backgroundColor: \"#e68900\" }\n          }}\n        >\n          Back 🔙\n        </Button>\n      </div>\n    );\n  }\n\n  // --- Main Chat View ---\n  return (\n    <div className=\"chat-container enhanced\">\n      <h2 className=\"chat-title\">{displayName || \"Unknown\"}'s Chat</h2>\n      <div\n          className=\"chat-box\"\n          style={{ height: \"300px\", overflowY: \"auto\" }}\n        >\n        {messages.map((msg, i) => {\n          const isMe = String(msg.sender) === String(user?.uid);\n          return (\n            <div key={i} className={`chat-bubble ${isMe ? \"sent\" : \"received\"}`}>\n              {!isMe && (\n                <strong className=\"sender\">{msg.username || msg.sender}</strong>\n              )}\n              <p className=\"message\">{msg.message}</p>\n            </div>\n          );\n        })}\n        <div ref={messageEndRef} />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", minHeight: \"60px\", gap: 8, marginTop: 10 }}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Type a message...\"\n          className=\"chat-input\"\n        />\n        <button onClick={handleSend} className=\"send-button\">\n          Send\n        </button>\n\n        {/* Show the stats icon if any feature is on */}\n        {(groupSettings.enableGroupStats ||\n          groupSettings.enableLeaderboard ||\n          groupSettings.enableSharedCoins) && (\n          <Tooltip title=\"View Leaderboard / Coins\">\n            <IconButton\n              sx={{ backgroundColor: \"#e5c185\", color: \"#fff\", \"&:hover\": { backgroundColor: \"#deae9f\" } }}\n              onClick={() => setIsLeaderboardVisible(true)}\n            >\n              <LeaderboardIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Tooltip title=\"Change Display Name\">\n          <IconButton\n            sx={{ backgroundColor: \"#e5c185\", color: \"#fff\", \"&:hover\": { backgroundColor: \"#deae9f\" } }}\n            onClick={() => setIsChangeUsernameVisible(true)}\n          >\n            <PersonIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Settings\">\n          <IconButton\n            sx={{ backgroundColor: \"#e5c185\", color: \"#fff\", \"&:hover\": { backgroundColor: \"#deae9f\" } }}\n            onClick={() => setIsSettingsVisible(true)}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}","// AuthForm.jsx\nimport React, { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { TextField, Button, Typography, Box, Link } from \"@mui/material\";\n\nexport default function AuthForm({ onLogin }) {\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login/signup\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleAuth = async () => {\n    try {\n      const userCred = isLogin\n        ? await signInWithEmailAndPassword(auth, email, password)\n        : await createUserWithEmailAndPassword(auth, email, password);\n\n      onLogin(userCred.user.uid);\n    } catch (error) {\n      alert(`Auth failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 320, mx: \"auto\", textAlign: \"center\", mt: 8 }}>\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>\n        {isLogin ? \"Login\" : \"Sign Up\"}\n      </Typography>\n\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        fullWidth\n        margin=\"normal\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        fullWidth\n        margin=\"normal\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n\n      <Button\n        variant=\"contained\"\n        fullWidth\n        sx={{ mt: 2 }}\n        onClick={handleAuth}\n      >\n        {isLogin ? \"Login\" : \"Sign Up\"}\n      </Button>\n\n      <Typography variant=\"body2\" sx={{ mt: 2 }}>\n        {isLogin ? \"Don't have an account?\" : \"Already have an account?\"}{\" \"}\n        <Link\n          component=\"button\"\n          variant=\"body2\"\n          onClick={() => setIsLogin(!isLogin)}\n        >\n          {isLogin ? \"Sign Up\" : \"Login\"}\n        </Link>\n      </Typography>\n    </Box>\n  );\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport Messages from \"./components/message\";\nimport AuthForm from \"./components/LoginForm\";\nimport { AuthProvider, useAuth } from \"./components/AuthContext\";\n\nfunction PluginContent() {\n  const { user, loading } = useAuth();\n\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <AuthForm onLogin={() => console.log(\"User logged in\")} />;\n\n  return <Messages />;\n}\n\nexport default function Plugin() {\n  return (\n    <AuthProvider>\n      <PluginContent />\n    </AuthProvider>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Chat.css */\n.chat-container.enhanced {\n  width: 100%;\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #fff;\n  font-family: 'Arial', sans-serif;\n}\n\n.chat-title {\n  background-color: #1ba494;\n  color: white;\n  padding: 15px;\n  text-align: center;\n  margin: 0;\n}\n\n.chat-box {\n  height: 400px;\n  overflow-y: auto;\n  padding: 15px;\n  background-color: #f9f9f9;\n}\n\n.chat-bubble {\n  margin-bottom: 10px;\n  padding: 10px 15px;\n  border-radius: 20px;\n  max-width: 70%;\n  word-wrap: break-word;\n}\n\n.chat-bubble.sent {\n  background-color: #dcf8c6;\n  margin-left: auto;\n  text-align: right;\n}\n\n.chat-bubble.received {\n  background-color: #fff;\n  border: 1px solid #ddd;\n  text-align: left;\n}\n\n.sender {\n  font-size: 0.8em;\n  color: #555;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.shared-image {\n  max-width: 100%;\n  border-radius: 10px;\n  margin-top: 5px;\n}\n\n.chat-input-container {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border-top: 1px solid #ddd;\n  background-color: #fafafa;\n}\n\n.chat-input {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  margin-right: 10px;\n}\n\n.image-upload-input {\n  margin-right: 10px;\n}\n\n.send-button {\n  padding: 10px 20px;\n  background-color: #1ba494;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n}\n\n.leaderboard-page {\n  /* Centering the content */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  /* Padding/margins for breathing room */\n  margin: 0 auto;\n  padding: 20px;\n\n  /* Font settings */\n  font-family: \"Roboto\", sans-serif; \n  color: #00796b; \n}\n\n.leaderboard-page h2 {\n  font-size: 2em;\n  margin-bottom: 10px;\n}\n\n.leaderboard-page p {\n  font-size: 1.2em;\n  line-height: 1.5;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/Chat.css\"],\"names\":[],\"mappings\":\"AAAA,aAAa;AACb;EACE,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,qCAAqC;EACrC,mBAAmB;EACnB,gBAAgB;EAChB,sBAAsB;EACtB,gCAAgC;AAClC;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,0BAA0B;EAC1B,yBAAyB;AAC3B;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,0BAA0B;EAC1B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;;EAElB,uCAAuC;EACvC,cAAc;EACd,aAAa;;EAEb,kBAAkB;EAClB,iCAAiC;EACjC,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB\",\"sourcesContent\":[\"/* Chat.css */\\n.chat-container.enhanced {\\n  width: 100%;\\n  max-width: 600px;\\n  margin: 20px auto;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  border-radius: 10px;\\n  overflow: hidden;\\n  background-color: #fff;\\n  font-family: 'Arial', sans-serif;\\n}\\n\\n.chat-title {\\n  background-color: #1ba494;\\n  color: white;\\n  padding: 15px;\\n  text-align: center;\\n  margin: 0;\\n}\\n\\n.chat-box {\\n  height: 400px;\\n  overflow-y: auto;\\n  padding: 15px;\\n  background-color: #f9f9f9;\\n}\\n\\n.chat-bubble {\\n  margin-bottom: 10px;\\n  padding: 10px 15px;\\n  border-radius: 20px;\\n  max-width: 70%;\\n  word-wrap: break-word;\\n}\\n\\n.chat-bubble.sent {\\n  background-color: #dcf8c6;\\n  margin-left: auto;\\n  text-align: right;\\n}\\n\\n.chat-bubble.received {\\n  background-color: #fff;\\n  border: 1px solid #ddd;\\n  text-align: left;\\n}\\n\\n.sender {\\n  font-size: 0.8em;\\n  color: #555;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.shared-image {\\n  max-width: 100%;\\n  border-radius: 10px;\\n  margin-top: 5px;\\n}\\n\\n.chat-input-container {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px;\\n  border-top: 1px solid #ddd;\\n  background-color: #fafafa;\\n}\\n\\n.chat-input {\\n  flex: 1;\\n  padding: 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 20px;\\n  margin-right: 10px;\\n}\\n\\n.image-upload-input {\\n  margin-right: 10px;\\n}\\n\\n.send-button {\\n  padding: 10px 20px;\\n  background-color: #1ba494;\\n  color: white;\\n  border: none;\\n  border-radius: 20px;\\n  cursor: pointer;\\n}\\n\\n.leaderboard-page {\\n  /* Centering the content */\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n\\n  /* Padding/margins for breathing room */\\n  margin: 0 auto;\\n  padding: 20px;\\n\\n  /* Font settings */\\n  font-family: \\\"Roboto\\\", sans-serif; \\n  color: #00796b; \\n}\\n\\n.leaderboard-page h2 {\\n  font-size: 2em;\\n  margin-bottom: 10px;\\n}\\n\\n.leaderboard-page p {\\n  font-size: 1.2em;\\n  line-height: 1.5;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","auth","getAuth","AuthContext","createContext","user","loading","AuthProvider","children","setUser","useState","setLoading","useEffect","onAuthStateChanged","firebaseUser","React","Provider","value","useAuth","useContext","ChangeUsername","username","setUsername","storedUsername","setStoredUsername","userDocRef","doc","uid","getDoc","then","docSnap","exists","data","Paper","elevation","sx","px","py","mb","borderRadius","background","color","maxWidth","maxHeight","width","boxShadow","Box","display","alignItems","gap","justifyContent","flexWrap","Typography","variant","fontWeight","whiteSpace","TextField","placeholder","onChange","e","target","backgroundColor","fontSize","Button","onClick","async","setDoc","merge","error","console","textTransform","options","Messages","input","setInput","messages","setMessages","isLeaderboardVisible","setIsLeaderboardVisible","isChangeUsernameVisible","setIsChangeUsernameVisible","isSettingsVisible","setIsSettingsVisible","messageEndRef","useRef","displayName","setDisplayName","totalCoins","setTotalCoins","groupTotalTime","setGroupTotalTime","individualStats","setIndividualStats","filteredStats","filter","u","groupSettings","setGroupSettings","enableGroupStats","enableLeaderboard","enableSharedCoins","showTrophies","trophyItems","id","name","emoji","parseTimeStringToMinutes","timeStr","hrs","mins","secs","split","map","Number","onSnapshot","snap","collection","snapshot","all","docs","d","sort","a","b","timestamp","toDate","current","scrollIntoView","behavior","coinsSnap","coins","groupSnap","totalTimeStudied","handleReceive","statsArr","time","likes","nudges","Promise","userSnap","trophySnap","entry","emojiList","items","item","find","i","Boolean","trophies","handleSend","trim","messageData","sender","messageID","Date","now","toString","message","addDoc","err","updateGroupSetting","key","className","style","flexDirection","padding","marginBottom","idx","marginLeft","minutes","totalSeconds","Math","floor","padStart","formatTime","length","marginTop","join","IconButton","size","disabled","updateDoc","targetUid","increment","sendLike","ThumbUpIcon","sendNudge","NotificationsActiveIcon","height","mt","minHeight","boxSizing","Card","CardContent","FormControlLabel","control","Switch","checked","label","overflowY","msg","isMe","String","ref","type","onKeyDown","Tooltip","title","LeaderboardIcon","PersonIcon","SettingsIcon","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AuthForm","onLogin","isLogin","setIsLogin","email","setEmail","password","setPassword","mx","textAlign","fullWidth","margin","userCred","signInWithEmailAndPassword","createUserWithEmailAndPassword","alert","Link","component","PluginContent","log","Plugin","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}